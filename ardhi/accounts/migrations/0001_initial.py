# Generated by Django 3.2.3 on 2021-11-20 11:26

import accounts.managers
import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Username')),
                ('type', models.CharField(choices=[('landowner', 'LANDOWNER'), ('agent', 'AGENT'), ('surveyor', 'SURVEYOR'), ('manager', 'MANAGER')], default='landowner', max_length=30, verbose_name='Type')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Accounts',
                'db_table': 'accounts',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female')], max_length=5, verbose_name='Gender')),
                ('kra_pin', models.CharField(max_length=20, null=True, unique=True, verbose_name='KRA PIN')),
                ('id_no', models.CharField(max_length=10, null=True, unique=True, verbose_name='ID NO')),
                ('dob', models.DateField(null=True, verbose_name='Date of Birth')),
                ('phone', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Contact Phone')),
                ('profile_image', models.ImageField(blank=True, default=accounts.models.get_default_profile_image, max_length=255, null=True, upload_to='profile_images', verbose_name='Profile Image')),
                ('ip', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ip Address')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='Longitude')),
                ('owner', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'User Profile',
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
            ],
            options={
                'permissions': (('agent_landowners', 'can agent landowners'), ('agent_surveyors', 'can agent surveyors')),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.account',),
        ),
        migrations.CreateModel(
            name='Landowner',
            fields=[
            ],
            options={
                'permissions': (('can_manage_account', 'can manage account'),),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.account',),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
            ],
            options={
                'permissions': (('can_manage_landowners', 'can manage landowners'), ('can_manage_agents', 'can manage agents'), ('can_manage_surveyors', 'can manage surveyors')),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.account',),
        ),
        migrations.CreateModel(
            name='Surveyor',
            fields=[
            ],
            options={
                'permissions': (('can_process_survey', 'can process survey'),),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.account',),
        ),
    ]
